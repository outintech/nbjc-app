# Following https://circleci.com/docs/2.0/language-ruby/
version: 2.1

orbs: # give us access to specific commands https://circleci.com/docs/2.0/using-orbs/
  ruby: circleci/ruby@1.1.2 # used to cache and install ruby gems
  node: circleci/node@2
  
# Jobs to run for this project
jobs:
  build: # pulls down current code and install dependencies so we can test
    docker:
      - image: cimg/ruby:2.7.2-node # using the same version as our Gemfile
        auth:
          username: outintech
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout # circle ci command to pull down github code https://circleci.com/docs/2.0/configuration-reference/#checkout
      - ruby/install-deps # install gems with bundler
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"

  test: # Run tests on new code
    docker:
      - image: cimg/ruby:2.7.2-node # primary image where step commands run
        auth:
          username: outintech
          password: $DOCKERHUB_PASSWORD
      - image: circleci/postgres:9.5-alpine
        auth:
          username: outintech
          password: $DOCKERHUB_PASSWORD
        environment: # POSTGRES environment variables
          POSTGRES_USER: circleci-nbjc-test
          POSTGRES_DB: nbjc_app_test
          POSTGRES_PASSWORD: ""
    environment:
      NBJC_APP_DATABASE_IP: 127.0.0.1
      NBJC_APP_DATABASE_PASSWORD: ""
      PGUSER: circleci-nbjc-test
      PGPASSWORD: ""
      RAILS_ENV: test
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - run: # wait for db container to boot before running
          name: Wait for DB boot
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      # Run rspec in parallel
      - ruby/rspec-test

# Build new image using docker
# 3. Push new image to docker hub
# sign into docker hub
# push to docker hub
# 4. Run pending migrations
# 5. Rerun docker-compose
# need to figure out how to run migrations without losing data

# Workflows to orchestrate jobs declared above
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires: # test requires build to pass before running
            - build
          filters:
            branches:
              only:
                - main
