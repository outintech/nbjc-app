upstream rails_api {  
   server api:8080;
} 
server {  
   # define your domain  
   server_name api.lavenderbook.org
   listen 80;
   server_tokens off;

   # define where Nginx should write its logs  
   access_log $RAILS_ROOT/log/nginx.access.log;  
   error_log $RAILS_ROOT/log/nginx.error.log;

   location /.well-known/acme-challenge/ {
      root /var/www/certbot;
   }

   location / {
      return 301 https://$host$request_uri;
   }
}

server {
   listen 443 ssl;
   server_name api.lavenderbook.org;
   server_tokens off;

   ssl_certificate /etc/letsencrypt/live/api.lavenderbook.org/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/api.lavenderbook.org/privkey.pem;
   
   # includes Let's Encrypt best-practice HTTPS configurations for nginx
   include /etc/letsencrypt/options-ssl-nginx.conf;
   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
  
   # send non-static file requests to the app server  
   location / {    
      try_files $uri @rails;  
   }   
   location @rails {    
      proxy_set_header  X-Real-IP  $remote_addr;    
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;         
      proxy_set_header Host $http_host;     
      proxy_pass http://rails_api;
      # prevent infinite request loop
      proxy_set_header X-Forwarded-Proto $scheme;
   }
}