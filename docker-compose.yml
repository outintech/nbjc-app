version: '3'
services:
  redis:
    image: 'redis:5.0.7'
    command: redis-server
    ports:
      - '6380:6379'
    volumes:
      - redis:/var/lib/redis/data
      
  api:
    container_name: rails_api
    image: outintech/nbjc-app:$DEPLOY_TAG
    depends_on:
      - redis
    env_file:
      - .env
    restart: always
    volumes:
      - api-logs:/var/www/nbjc-app/log

  web:
    build:
      context: .
      dockerfile: ./web/Dockerfile
    depends_on:
      - api
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  datadog:
    image: "datadog/agent:latest"
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_LOGS_ENABLED=true
      - DD_AC_INCLUDE="name:rails_api"
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_SITE=datadoghq.eu

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro

volumes:
  redis:
  api-logs:
      
